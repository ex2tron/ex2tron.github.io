<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ex2tron&#39;s Blog</title>
  <subtitle>Excelsior!</subtitle>
  <link href="/atom.xaml" rel="self"/>
  
  <link href="https://ex2tron.github.io/"/>
  <updated>2017-10-05T09:42:42.530Z</updated>
  <id>https://ex2tron.github.io/</id>
  
  <author>
    <name>Tony Wong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【利器篇】GitKraken——顶级酷炫Git图像化客户端</title>
    <link href="https://ex2tron.github.io/2017/10/05/%E3%80%90%E5%88%A9%E5%99%A8%E7%AF%87%E3%80%91GitKraken%E2%80%94%E2%80%94%E9%A1%B6%E7%BA%A7%E9%85%B7%E7%82%ABGit%E5%9B%BE%E5%83%8F%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>https://ex2tron.github.io/2017/10/05/【利器篇】GitKraken——顶级酷炫Git图像化工具/</id>
    <published>2017-10-05T09:33:20.000Z</published>
    <updated>2017-10-05T09:42:42.530Z</updated>
    
    <content type="html"><![CDATA[<p>不喜欢敲命令？那么这款酷炫的Git客户端让你逼格满满！<a id="more"></a></p>
<blockquote>
<p><em>真正的忘记是不需要努力的。</em>——<a href="https://movie.douban.com/subject/5045678/" target="_blank" rel="external">《大鱼海棠》</a></p>
</blockquote>
<hr>
<p>首先废话一段：以前我上班的时候，公司里的<a href="https://baike.baidu.com/item/scm/2039966" target="_blank" rel="external">SCM</a>用的是perforce，你应该、可能没听过( ╯□╰ )。总之，就是集中式版本管理系统，相比于git的分布式有很多缺陷，具体可以看廖雪峰的这篇文章：“<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374027586935cf69c53637d8458c9aec27dd546a6cd6000" target="_blank" rel="external">集中式vs分布式</a>”。但作为一款商业软件，perforce提供的优秀客户端体验还是相当不错的。使用git后，一直都是敲命令的，一是因为习惯，毕竟码代码逼格高嘛，二是因为git的GUI客户端要不很丑，要不功能捉急，总之不想用。之后，在微博上看到这款软件，又同类似的<a href="http://www.sourcetreeapp.com/" target="_blank" rel="external">SourceTree</a>相比体验了一下，无奈，我，还是喜欢颜值高的~ o(<em>￣▽￣</em>)o另外，以前外教老师提问说《加勒比海盗2》中的那个怪物叫啥，阅片无数的我，那天竟然没回答上，装逼失败，所以对这只“挪威海怪kraken”影响特别深刻。好了，开始正题吧，扯远了~</p>
<p>官网/下载：<a href="https://www.gitkraken.com/" target="_blank" rel="external">GitKraken</a></p>
<p>GitKraken对Windows/Linux/Mac三大主流平台都支持，其方便之处在于，它不需要安装配置，双击打开就可以了。打开之后，可以选择用Github账号登陆，需要Github授权：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/gitkraken_sign_in_with_github.png" alt="gitkraken_sign_in_with_github" title="">
                </div>
                <div class="image-caption">gitkraken_sign_in_with_github</div>
            </figure>
<h2 id="打开-克隆-初始化"><a href="#打开-克隆-初始化" class="headerlink" title="打开/克隆/初始化"></a>打开/克隆/初始化</h2><p>GitKranken支持打开本地仓库，从指定的URL或Github、Gitlab、Bitbucket等上面直接克隆。前面我们已经用Github直接登陆了，所以，从Github克隆时，会直接列出你当前的所有仓库项目，非常方便。当然，也可以连接到Gitlab/Bitbucket平台：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/gitkraken_clone_from_github.png" alt="gitkraken_clone_from_github" title="">
                </div>
                <div class="image-caption">gitkraken_clone_from_github</div>
            </figure>
<p>初始化/新建项目也非常方便，在<code>Init</code>选项中，可以选择初始化一个本地仓库或类似Github之类的远程仓库。GitKraken初始化时还提供了.gitignore的文件的相关模板：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/gitkraken_init_github_repo.png" alt="gitkraken_init_github_repo" title="">
                </div>
                <div class="image-caption">gitkraken_init_github_repo</div>
            </figure>
<h2 id="界面-功能"><a href="#界面-功能" class="headerlink" title="界面/功能"></a>界面/功能</h2><p>打开一个仓库后，主界面如下图，酷炫简洁，顶部提供了常用的Git功能，就不细说了。我主要提及一下，如何进行版本差分：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/gitkraken_main_ui.png" alt="gitkraken_main_ui" title="">
                </div>
                <div class="image-caption">gitkraken_main_ui</div>
            </figure>
<p>在提交日志的主界面，如果要比较任意两个版本之间的差分，按住Ctrl键，选择要比较的版本，右边会自动列出两个版本之间所修改的文件，点击文件就可以看到diff了：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/gitkraken_view_commits_diff.png" alt="gitkraken_view_commits_diff" title="">
                </div>
                <div class="image-caption">gitkraken_view_commits_diff</div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/gitkraken_view_file_diff.png" alt="gitkraken_view_file_diff" title="">
                </div>
                <div class="image-caption">gitkraken_view_file_diff</div>
            </figure>
<p>当然，最新版本（本文使用的是3.1版本）的GitKraken提供了Merge和Diff工具的自定义（File-Preferences-General中设置），比如说我最常用的Merge工具是WinMerge，就可以在这里配置。</p>
<p>抛砖引玉，大致介绍了一下，其实熟悉Git的话，这个工具使用起来还是蛮简单的~ o(<em>￣▽￣</em>)o</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不喜欢敲命令？那么这款酷炫的Git客户端让你逼格满满！
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="利器篇" scheme="https://ex2tron.github.io/tags/%E5%88%A9%E5%99%A8%E7%AF%87/"/>
    
      <category term="Git" scheme="https://ex2tron.github.io/tags/Git/"/>
    
      <category term="GitKraken" scheme="https://ex2tron.github.io/tags/GitKraken/"/>
    
  </entry>
  
  <entry>
    <title>小白深度学习笔记1：logistic回归</title>
    <link href="https://ex2tron.github.io/2017/10/02/%E5%B0%8F%E7%99%BD%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01%EF%BC%9Alogistic%E5%9B%9E%E5%BD%92/"/>
    <id>https://ex2tron.github.io/2017/10/02/小白深度学习笔记1：logistic回归/</id>
    <published>2017-10-02T13:06:32.000Z</published>
    <updated>2017-10-06T14:39:26.157Z</updated>
    
    <content type="html"><![CDATA[<p>开启神经网络与深度学习之坑！<a id="more"></a>本篇内容包含部分数学公式，需要用MathJax脚本渲染，所以页面需等待加载完成后，才可完整显示公式。</p>
<blockquote>
<p><em>When life ends up breathtakingly fucked, you can generally trace it back to one big, bad decision.</em>——<a href="https://movie.douban.com/subject/3718279/" target="_blank" rel="external">《DeadPool》</a><br><em>当你的生活变成一坨屎的时候，通常都是因为你当时做的傻逼决定。</em>——<a href="https://movie.douban.com/subject/3718279/" target="_blank" rel="external">《死侍》</a></p>
</blockquote>
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script>

<p>本文是我在观看吴恩达老师的<a href="https://mooc.study.163.com/smartSpec/detail/1001319001.htm" target="_blank" rel="external">《神经网络和深度学习》</a>视频课程时，相关的笔记整理，大佬勿喷！</p>
<hr>
<h2 id="二类分类"><a href="#二类分类" class="headerlink" title="二类分类"></a>二类分类</h2><p>比如说分析一张图片中有猫还是没猫，这就是一个二类分类（Binary Classification）问题。这里，我们用输出y=1表示有猫，y=0表示没有猫。输入是一张图片，做过图像处理的同学应该知道图片是以RGB三个矩阵存储的，把RGB三分量的值提取出来，作为X，如下图：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/rgb_convert_input_x.png" alt="rgb_convert_input_x" title="">
                </div>
                <div class="image-caption">rgb_convert_input_x</div>
            </figure>
<p>那么当有m个样本时，X就是一个(nx,m)，即nx行、m列的矩阵，而输出Y的形状（形状就是指矩阵的行数和列数）是(1,m)。</p>
<h2 id="logistic回归"><a href="#logistic回归" class="headerlink" title="logistic回归"></a>logistic回归</h2><p>logistic回归（<a href="https://baike.baidu.com/item/Logistic%E6%A8%A1%E5%9E%8B?fromtitle=Logistic+regression&amp;fromid=18080373" target="_blank" rel="external">Logistic Regression</a>）就是一个用于二类分类的学习算法：假定给出输入的特征向量\(x_1\)（如一张图片），我们希望程序给出一个预测值\(\hat{y}\)，它指出这张图片中有猫还是没猫的概率，即：<br>$$\hat{y}=P(y=1\ or\ 0\mid x)$$</p>
<p>既然\(\hat{y}\)是一个概率，那么\(\hat{y}\in[0,1]\)。如果按照线性回归，输出值应该是：\(\hat{y}=w^Tx+b\)，w形状是(nx,1)，b形状是(1,1)，但是这个值可能远比1大或者出现负数，所以，需要用一个sigmoid函数做限定，最终输出为：<br>$$\hat{y}=\sigma(w^Tx+b)$$</p>
<p>观察sigmoid函数\(\sigma(z)=\frac{1}{1+e^{-z}}\)的曲线图：</p>
<p>\(z\rightarrow\infty,\sigma(z)\rightarrow1;z\rightarrow-\infty,\sigma(z)\rightarrow0;z=0,\sigma(z)=0.5\)</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/sigmoid_function_graph.png" alt="sigmoid_function_graph" title="">
                </div>
                <div class="image-caption">sigmoid_function_graph</div>
            </figure>
<h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><p>既然我们的目标就是训练得到logistic回归函数中的w和b参数，那么怎么衡量算法的运行情况呢？我们可以用损失函数（Loss Function）L表示预测值与真值的接近程度。最简单的损失函数可以定义成\(L(\hat{y},y)=\hat{y}-y\)。但是不会这样用，因为要考虑到优化算法的运算速度和效率，排除多个局部最优解。一般，损失函数定义为：<br>$$L(\hat{y},y)=-[y\log\hat{y}+(1-y)\log(1-\hat{y})]$$</p>
<p>显然，损失函数越小，结果越好。那么这个损失函数如何起作用的呢？</p>
<p>假设真值y=1，那么上式就会变成：\(L(\hat{y},1)=-\log\hat{y}\)，要让损失函数尽量小，那么\(\log\hat{y}\)尽量大，也就是说\(\hat{y}\)尽量大，由于\(\hat{y}\in[0,1]\)，所以，这个损失函数会使预测值\(\hat{y}\)尽量接近1，即真值。同样，大家可以推一下真值y=0的情况。</p>
<h2 id="成本函数"><a href="#成本函数" class="headerlink" title="成本函数"></a>成本函数</h2><p>前面所说的损失函数是针对单个训练样本定义的，我们可以用成本函数（Cost Function）来定义全体训练样本上的算法运行情况，定义如下：<br>$$J(w,b)=\frac{1}{m}\sum_{i=1}^mL(\hat{y^i},y^i)$$</p>
<h2 id="梯度下降法"><a href="#梯度下降法" class="headerlink" title="梯度下降法"></a>梯度下降法</h2><p>好，到这里，先总结一下：</p>
<ul>
<li>logistic回归模型是用于二类分类的一种学习算法</li>
<li>损失函数衡量参数w和b在单个训练样本的效果</li>
<li>成本函数衡量参数w和b在全体训练样本的效果</li>
<li>训练目标：找到使成本函数J尽可能小的参数w和b</li>
</ul>
<p>那么w和b参数是怎么调整的呢？为了说明梯度下降法（Gradient Descent），吴恩达老师假定w和b都是实数，那么J(w,b)的函数图形类似下图：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/cost_function_graph.png" alt="cost_function_graph" title="">
                </div>
                <div class="image-caption">cost_function_graph</div>
            </figure>
<p>一般，先随机初始化w和b，然后朝着最快下降的方向不断按下面的公式调整w和b参数，最后得到最优解（:=表示更新w的值）：</p>
<p>$$w:=w-\alpha\frac{dJ(w,b)}{dw}$$<br>$$b:=b-\alpha\frac{dJ(w,b)}{db}$$</p>
<p>\(\alpha\)成为学习率（Learning Rate），表示梯度下降法的步长。</p>
<p>好了，这就是相关的logistic回归的简单理论笔记。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开启神经网络与深度学习之坑！
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="神经网络" scheme="https://ex2tron.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="https://ex2tron.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="logistic回归" scheme="https://ex2tron.github.io/tags/logistic%E5%9B%9E%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>【算法贴】三点定位算法</title>
    <link href="https://ex2tron.github.io/2017/09/29/%E3%80%90%E7%AE%97%E6%B3%95%E8%B4%B4%E3%80%91%E4%B8%89%E7%82%B9%E5%AE%9A%E4%BD%8D%E7%AE%97%E6%B3%95/"/>
    <id>https://ex2tron.github.io/2017/09/29/【算法贴】三点定位算法/</id>
    <published>2017-09-29T10:58:31.000Z</published>
    <updated>2017-10-05T09:52:33.563Z</updated>
    
    <content type="html"><![CDATA[<p>已知三个点的坐标和未知点到这三个点的距离，求未知点？<a id="more"></a></p>
<blockquote>
<p><em>过去的如果就这么过去了，以后只会越来越糟。</em>——<a href="https://movie.douban.com/subject/25921812/" target="_blank" rel="external">《驴得水》</a></p>
</blockquote>
<hr>
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script>

<p>p.s.本文引用了mathjax脚本用来显示数学公式，所以需等待加载完成才能显示正常。</p>
<h2 id="算法解析"><a href="#算法解析" class="headerlink" title="算法解析"></a>算法解析</h2><p>如下图所示，以三个已知点为圆心，d1,d2,d3为半径作圆，交点便是要求解的未知点：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/trilateration_sample.png" alt="trilateration_sample" title="">
                </div>
                <div class="image-caption">trilateration_sample</div>
            </figure>
<p>刚开始百度了一下，各种稀奇的算法，包括将三角形平移、旋转啥的，其实不用这么麻烦，直接通过勾股定理死算就可以了。</p>
<p>$$(x_1-x_0)^2+(y_1-y_0)^2=d_1^2$$</p>
<p>$$(x_2-x_0)^2+(y_2-y_0)^2=d_2^2$$</p>
<p>$$(x_3-x_0)^2+(y_3-y_0)^2=d_3^2$$</p>
<p>将上面三个式子展开：</p>
<p>$$x_1^2+x_0^2-2x_0x_1+y_1^2+y_0^2-2y_0y_1=d_1^2 ①$$<br>$$x_2^2+x_0^2-2x_0x_2+y_2^2+y_0^2-2y_0y_2=d_2^2 ②$$<br>$$x_3^2+x_0^2-2x_0x_3+y_3^2+y_0^2-2y_0y_3=d_3^2 ③$$</p>
<p>显然通过三个式子中的任意两个相减，比如①-③和②-③就可以得到两个未知数的两个式子：</p>
<p>$$x_1^2-x_3^2-2x_0(x_1-x_3)+y_1^2-y_3^2-2y_0(y_1-y_3)=d_1^2-d_3^2$$<br>$$x_2^2-x_3^2-2x_0(x_2-x_3)+y_2^2-y_3^2-2y_0(y_2-y_3)=d_2^2-d_3^2$$</p>
<p>接下来就不用说了，其实这都是初中数学的问题( ╯□╰ )</p>
<h2 id="算法实现CSharp"><a href="#算法实现CSharp" class="headerlink" title="算法实现CSharp"></a>算法实现CSharp</h2><p>根据上面的推导，我们的算法就很好写了。先定义一个Point的结构体或类，然后编写一个函数，将已知的三个点和三个距离传入：</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line"><span class="comment"><span class="doctag">///</span> 定义Point结构体</span></div><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line"><span class="keyword">public</span> <span class="keyword">struct</span> Point</div><div class="line">&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">double</span> X;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">double</span> Y;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> Point <span class="title">GetMobilePoint</span>(<span class="params">Point p1, Point p2, Point p3, <span class="keyword">double</span> d1, <span class="keyword">double</span> d2, <span class="keyword">double</span> d3</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="comment">//相当于①式-③式</span></div><div class="line">    <span class="keyword">double</span> A = p1.X - p3.X;</div><div class="line">    <span class="keyword">double</span> B = p1.Y - p3.Y;</div><div class="line">    <span class="keyword">double</span> C = Math.Pow(p1.X, <span class="number">2</span>) - Math.Pow(p3.X, <span class="number">2</span>) + Math.Pow(p1.Y, <span class="number">2</span>) - Math.Pow(p3.Y, <span class="number">2</span>) + Math.Pow(d3, <span class="number">2</span>) - Math.Pow(d1, <span class="number">2</span>);</div><div class="line"></div><div class="line">    <span class="comment">//相当于②式-③式</span></div><div class="line">    <span class="keyword">double</span> D = p2.X - p3.X;</div><div class="line">    <span class="keyword">double</span> E = p2.Y - p3.Y;</div><div class="line">    <span class="keyword">double</span> F = Math.Pow(p2.X, <span class="number">2</span>) - Math.Pow(p3.X, <span class="number">2</span>) + Math.Pow(p2.Y, <span class="number">2</span>) - Math.Pow(p3.Y, <span class="number">2</span>) + Math.Pow(d3, <span class="number">2</span>) - Math.Pow(d2, <span class="number">2</span>);</div><div class="line">    </div><div class="line">    <span class="comment">//计算结果</span></div><div class="line">    <span class="keyword">double</span> x0 = (B * F - E * C) / (<span class="number">2</span> * B * D - <span class="number">2</span> * A * E);</div><div class="line">    <span class="keyword">double</span> y0 = (A * F - D * C) / (<span class="number">2</span> * A * E - <span class="number">2</span> * B * D);</div><div class="line"></div><div class="line">    Point resultPoint;</div><div class="line">    resultPoint.X = x0;</div><div class="line">    resultPoint.Y = y0;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> resultPoint;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;已知三个点的坐标和未知点到这三个点的距离，求未知点？
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="三角定位" scheme="https://ex2tron.github.io/tags/%E4%B8%89%E8%A7%92%E5%AE%9A%E4%BD%8D/"/>
    
      <category term="算法贴" scheme="https://ex2tron.github.io/tags/%E7%AE%97%E6%B3%95%E8%B4%B4/"/>
    
  </entry>
  
  <entry>
    <title>构建法、杀死变量</title>
    <link href="https://ex2tron.github.io/2017/09/28/%E6%9E%84%E5%BB%BA%E6%B3%95%E3%80%81%E6%9D%80%E6%AD%BB%E5%8F%98%E9%87%8F/"/>
    <id>https://ex2tron.github.io/2017/09/28/构建法、杀死变量/</id>
    <published>2017-09-28T13:23:45.000Z</published>
    <updated>2017-10-05T09:43:18.673Z</updated>
    
    <content type="html"><![CDATA[<p>如果你仔细回想一下，平日阅读代码的时候，是什么占用了你大量的时间和精力？毫无疑问：变量。<a id="more"></a></p>
<blockquote>
<p><em>Why do we fall, Bruce? So we can learn to pick ourselves up.</em>  ——《<a href="https://movie.douban.com/subject/1309069/" target="_blank" rel="external">Batman Begins</a>》<br><br><em>我们为何会跌倒？这样我们才可以学会自己爬起来。</em>——《<a href="https://movie.douban.com/subject/1309069/" target="_blank" rel="external">蝙蝠侠：侠影之谜</a>》</p>
</blockquote>
<hr>
<p>如果一个变量在代码中很分散，阅读者在同一时间内考虑的代码行数势必会增加，编写者引入Bug的概率也会增大。那么，该如何从减少变量的作用域角度提高代码质量呢？</p>
<p>p.s.本文相关内容仍旧是我阅读<a href="https://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&amp;qid=1506601446&amp;sr=8-1&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8" target="_blank" rel="external">《代码大全》</a>时的笔记与总结，大佬勿喷！</p>
<h3 id="变量跨度与存活时间"><a href="#变量跨度与存活时间" class="headerlink" title="变量跨度与存活时间"></a>变量跨度与存活时间</h3><h4 id="建议一：把对变量的引用尽可能集中在一起，使变量局部化"><a href="#建议一：把对变量的引用尽可能集中在一起，使变量局部化" class="headerlink" title="建议一：把对变量的引用尽可能集中在一起，使变量局部化"></a>建议一：把对变量的引用尽可能集中在一起，使变量局部化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">a = 0; </div><div class="line">b = 0;</div><div class="line">c = 0;</div><div class="line">a = b + c;</div><div class="line">b += 1;</div></pre></td></tr></table></figure>
<p>跨度（span）是衡量变量不同引用点靠近程度的一种方法。比如说上面的代码，对a的第一次引用和第二次引用之间有2行代码，那么变量a的跨度就是2。引用多次的话，可以取平均跨度。如b的第一次和第二次引用之间行数为1，第二次和第三次引用之间行数为0，所以平均跨度span(b)=(1+0)/2=0.5。</p>
<p>另外一个概念是：存活时间（live time）。跟跨度类似，不过存活时间只跟变量第一次和最后一次引用有关。比如对于上面代码中的b变量，跨度是0.5，但是存活时间是4条语句。</p>
<p>显然，我们的目标就是<strong>缩短变量的跨度和存活时间</strong>。如果用这两个概念考察全局变量，就会发现全局变量的跨度和存活时间都很长，这也是为什么避免使用全局变量的原因之一。</p>
<h3 id="减小作用域的建议"><a href="#减小作用域的建议" class="headerlink" title="减小作用域的建议"></a>减小作用域的建议</h3><h4 id="建议二：把相关语句放在一起"><a href="#建议二：把相关语句放在一起" class="headerlink" title="建议二：把相关语句放在一起"></a>建议二：把相关语句放在一起</h4><p>把变量的引用点集中在一起，使代码易于自上而下的阅读，举例来说：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">//跳来跳去的糟糕代码</div><div class="line">MarketingData marketingData;</div><div class="line">SalesData salesData;</div><div class="line">TravelData travelData;</div><div class="line"></div><div class="line">travelData.ComputeWeekly();</div><div class="line">salesData.ComputeWeekly();</div><div class="line">marketingData.ComputeWeekly();</div><div class="line"></div><div class="line">salesData.ComputeAnnually();</div><div class="line">travelData.ComputeAnnually();</div><div class="line">marketingData.ComputeAnnually();</div><div class="line"></div><div class="line">salesData.print();</div><div class="line">travelData.print();</div><div class="line">marketingData.print();</div></pre></td></tr></table></figure>
<p>显然，如果你要想知道marketingData的计算流程，就必须在这段代码的不同行数跳跃。所以，这样组织代码会更好：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//组织良好，从上而下阅读</div><div class="line">MarketingData marketingData;</div><div class="line">marketingData.ComputeWeekly();</div><div class="line">marketingData.ComputeAnnually();</div><div class="line">marketingData.print();</div><div class="line"></div><div class="line">SalesData salesData;</div><div class="line">salesData.ComputeWeekly();</div><div class="line">salesData.ComputeAnnually();</div><div class="line">salesData.print();</div><div class="line"></div><div class="line">TravelData travelData;</div><div class="line">travelData.ComputeWeekly();</div><div class="line">travelData.ComputeAnnually();</div><div class="line">travelData.print();</div></pre></td></tr></table></figure>
<p>《代码大全》中介绍了一种简便的检查相关语句是否组成得当的方法，把你的代码片段打印出来，然后把相关的语句画上框，组织得当的话， 这些框是不会重叠的：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/good_grouping_related_statements.png" alt="good_grouping_related_statements" title="">
                </div>
                <div class="image-caption">good_grouping_related_statements</div>
            </figure>
<h4 id="建议三：把相关语句提取成单独的子程序"><a href="#建议三：把相关语句提取成单独的子程序" class="headerlink" title="建议三：把相关语句提取成单独的子程序"></a>建议三：把相关语句提取成单独的子程序</h4><p>更短的子程序相比长的子程序，变量的跨度和存活时间更小。比如，可以尝试这样重构上面的代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//重构，提取子程序</div><div class="line">ComputeMarketingData();</div><div class="line"></div><div class="line">ComputeSalesData();</div><div class="line"></div><div class="line">ComputeTravelData();</div></pre></td></tr></table></figure>
<h4 id="建议四：开始使用最小的作用域，然后根据需求再扩展"><a href="#建议四：开始使用最小的作用域，然后根据需求再扩展" class="headerlink" title="建议四：开始使用最小的作用域，然后根据需求再扩展"></a>建议四：开始使用最小的作用域，然后根据需求再扩展</h4><p>一句话解释就是：<strong>把全局变量转换为成员局部变量要比局部变量转换为全局变量难的多</strong>。因此，在设计程序时，如果对变量的作用域犹豫不决时，优先倾向于最小的作用域。</p>
<h4 id="建议五：循环开始之前再去初始化循环变量"><a href="#建议五：循环开始之前再去初始化循环变量" class="headerlink" title="建议五：循环开始之前再去初始化循环变量"></a>建议五：循环开始之前再去初始化循环变量</h4><p>一个不好的编程习惯就是在程序开头初始化好循环所使用的变量，如<code>int i = 0,j = 0;</code>。而在很后面才使用到循环。这样做的坏处一是查看循环时需要跳到开头才知道循环变量的值，另外，如果要修改这个循环，往往会忘记同时修改循环变量。</p>
<p>往期【构建法】系列回顾：</p>
<ul>
<li><a href="http://www.lofter.com/lpost/1d7338a1_f50d92d" target="_blank" rel="external">构建法、单点控制</a></li>
<li><a href="http://www.lofter.com/lpost/1d7338a1_10204bea" target="_blank" rel="external">构建法、表驱动法</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你仔细回想一下，平日阅读代码的时候，是什么占用了你大量的时间和精力？毫无疑问：变量。
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="构建法" scheme="https://ex2tron.github.io/tags/%E6%9E%84%E5%BB%BA%E6%B3%95/"/>
    
      <category term="变量" scheme="https://ex2tron.github.io/tags/%E5%8F%98%E9%87%8F/"/>
    
      <category term="作用域" scheme="https://ex2tron.github.io/tags/%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>【片单】诺兰神作集</title>
    <link href="https://ex2tron.github.io/2017/09/24/%E3%80%90%E7%89%87%E5%8D%95%E3%80%91%E8%AF%BA%E5%85%B0%E7%A5%9E%E4%BD%9C%E9%9B%86/"/>
    <id>https://ex2tron.github.io/2017/09/24/【片单】诺兰神作集/</id>
    <published>2017-09-24T12:37:41.000Z</published>
    <updated>2017-09-24T12:56:30.434Z</updated>
    
    <content type="html"><![CDATA[<p>有的导演，虽然没拿过奥斯卡，作品不多，但每部却都被影迷奉为神作。没错，说的就是诺神<a id="more"></a>：<a href="https://baike.baidu.com/item/克里斯托弗·诺兰" target="_blank" rel="external">克里斯托弗·诺兰</a></p>
<h2 id="克里斯托弗·诺兰"><a href="#克里斯托弗·诺兰" class="headerlink" title="克里斯托弗·诺兰"></a>克里斯托弗·诺兰</h2><p>今天周末，回顾了下诺神的<a href="https://movie.douban.com/subject/1851857/" target="_blank" rel="external">蝙蝠侠</a>和<a href="https://movie.douban.com/subject/3541415/" target="_blank" rel="external">盗梦空间</a>，加上前段时间刚看完<a href="https://movie.douban.com/subject/26607693/" target="_blank" rel="external">敦刻尔克</a>，按耐不住，就分享下诺兰的神作电影下载链接吧。</p>
<p><strong>作品按时间排序，点击片名或者右键复制链接即可：</strong></p>
<h3 id="敦刻尔克-Dunkirk（目前无资源）"><a href="#敦刻尔克-Dunkirk（目前无资源）" class="headerlink" title="敦刻尔克 | Dunkirk（目前无资源）"></a>敦刻尔克 | Dunkirk（目前无资源）</h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/fudEG1VUWuOqleXv6NwCExK0VLy.jpg" alt="Dunkirk" title="">
                </div>
                <div class="image-caption">Dunkirk</div>
            </figure>
<h3 id="星际穿越-Interstellar"><a href="#星际穿越-Interstellar" class="headerlink" title="星际穿越 | Interstellar"></a><a href="ed2k://|file|Interstellar.2014.%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A.720p.Chi_Eng.ZMZ-BD-MP4-V2.mp4|2448135931|ad26bb8d5386690810d948ece0499744|h=zo7ee5uktzrarrfj37z2bpk3enoxsxxz|/" target="_blank" rel="external">星际穿越 | Interstellar</a></h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/walWq52PP2IGRc98VkPG7Wp77lK.jpg" alt="Interstellar" title="">
                </div>
                <div class="image-caption">Interstellar</div>
            </figure>
<h3 id="蝙蝠侠：黑暗骑士崛起-The-Dark-Knight-Rises"><a href="#蝙蝠侠：黑暗骑士崛起-The-Dark-Knight-Rises" class="headerlink" title="蝙蝠侠：黑暗骑士崛起 | The Dark Knight Rises"></a><a href="ed2k://|file|The.Dark.Knight.Rises.2012.%E8%9D%99%E8%9D%A0%E4%BE%A0%E5%89%8D%E4%BC%A03.%E9%BB%91%E6%9A%97%E9%AA%91%E5%A3%AB%E5%B4%9B.%E5%8F%8C%E8%AF%AD%E5%AD%97%E5%B9%95.HR-HDTV.AC3.1024X576.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86%E5%88%B6%E4%BD%9C.mkv|2696715142|1b873142c39aa7bfe7924264026b0ae4|h=s3nom7fhjxntisny4hypfimmmtxzcyw2|/" target="_blank" rel="external">蝙蝠侠：黑暗骑士崛起 | The Dark Knight Rises</a></h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/3bgtUfKQKNi3nJsAB5URpP2wdRt.jpg" alt="The Dark Knight Rises" title="">
                </div>
                <div class="image-caption">The Dark Knight Rises</div>
            </figure>
<h3 id="盗梦空间-Inception"><a href="#盗梦空间-Inception" class="headerlink" title="盗梦空间 | Inception"></a><a href="ed2k://|file|盗梦空间.Inception.2010.中英字幕.BDrip.AAC.720p.x264-人人影视.mp4|2216102241|744dced4b7d5c6fa22db48188c6b7327|h=vn5yfyvbcn2p2gf673pfrscnnonahxbj|/" target="_blank" rel="external">盗梦空间 | Inception</a></h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/s2bT29y0ngXxxu2IA8AOzzXTRhd.jpg" alt="Inception" title="">
                </div>
                <div class="image-caption">Inception</div>
            </figure>
<h3 id="蝙蝠侠：黑暗骑士-The-Dark-Knight"><a href="#蝙蝠侠：黑暗骑士-The-Dark-Knight" class="headerlink" title="蝙蝠侠：黑暗骑士 | The Dark Knight"></a><a href="ed2k://|file|The.Dark.Knight.2008.%E8%9D%99%E8%9D%A0%E4%BE%A0%E5%89%8D%E4%BC%A02%EF%BC%9A%E9%BB%91%E6%9A%97%E9%AA%91%E5%A3%AB.%E5%8F%8C%E8%AF%AD%E5%AD%97%E5%B9%95.%E5%9B%BD%E8%8B%B1%E9%9F%B3%E8%BD%A8.HR-HDTV.AC3.1024X576.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86%E5%88%B6%E4%BD%9C.mkv|2869506431|c9f803597ad8ffa4d7acda888129cc94|h=ehcceg3xz2qx3msc7jvebyvmghbnd4n6|/" target="_blank" rel="external">蝙蝠侠：黑暗骑士 | The Dark Knight</a></h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/nnMC0BM6XbjIIrT4miYmMtPGcQV.jpg" alt="The Dark Knight" title="">
                </div>
                <div class="image-caption">The Dark Knight</div>
            </figure>
<h3 id="致命魔术-The-Prestige"><a href="#致命魔术-The-Prestige" class="headerlink" title="致命魔术 | The Prestige"></a><a href="ed2k://|file|The.Prestige.致命魔术.双语字幕.HR-HDTV.AC3.1024X576.x264-人人影视制作.mkv|2077111129|A18F57470B0AB144D1B4889C8ECAF3C0|h=U6WQH2SXKRDMDCMTARJKD2IH7WOS2UUU|/" target="_blank" rel="external">致命魔术 | The Prestige</a></h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/nbQQ6L4qRTk0WMVkRhTxc4MMRd9.jpg" alt="The Prestige" title="">
                </div>
                <div class="image-caption">The Prestige</div>
            </figure>
<h3 id="蝙蝠侠-侠影之谜-Batman-Begins"><a href="#蝙蝠侠-侠影之谜-Batman-Begins" class="headerlink" title="蝙蝠侠.侠影之谜 | Batman Begins"></a><a href="ed2k://|file|蝙蝠侠.侠影之谜.Batman.Begins.2005.BD-720p.1280X720.中英双语-电波字幕组.mkv|2490413875|E8FA6BDC8DD5A22E1582728C2B34B5E3|h=D2EEMY7CD7GJ33GNLHEMFSPQVPC3IZ6I|/" target="_blank" rel="external">蝙蝠侠.侠影之谜 | Batman Begins</a></h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/v0p5dxVa9Giq6e0h31VifY0dWOX.jpg" alt="Batman Begins" title="">
                </div>
                <div class="image-caption">Batman Begins</div>
            </figure>
<h3 id="记忆碎片-Memento"><a href="#记忆碎片-Memento" class="headerlink" title="记忆碎片 | Memento"></a><a href="ed2k://|file|Memento.10th.Anniversary.2000.记忆碎片.双语字幕.HR-HDTV.AC3.1024X544.X264-人人影视制作.mkv|1944503362|EDA2166CB8699364B9062F7F9CB700EC|h=ETS47DE4SLODZQSZ5LU2RVF6V5VA36GW|/" target="_blank" rel="external">记忆碎片 | Memento</a></h3><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://image.tmdb.org/t/p/w740_and_h416_bestv2/oBUznaSdjkY3HtQUzAxgdIZqh4w.jpg" alt="Memento" title="">
                </div>
                <div class="image-caption">Memento</div>
            </figure>
<p>p.s.本文所有的图片均来自<a href="https://www.themoviedb.org/" target="_blank" rel="external">TMDB</a>，如果你觉得很酷炫的话，我会在后期开发一款专门下载影视壁纸的APP，敬请期待！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有的导演，虽然没拿过奥斯卡，作品不多，但每部却都被影迷奉为神作。没错，说的就是诺神
    
    </summary>
    
    
      <category term="Lens" scheme="https://ex2tron.github.io/tags/Lens/"/>
    
      <category term="诺兰" scheme="https://ex2tron.github.io/tags/%E8%AF%BA%E5%85%B0/"/>
    
      <category term="蝙蝠侠" scheme="https://ex2tron.github.io/tags/%E8%9D%99%E8%9D%A0%E4%BE%A0/"/>
    
      <category term="敦刻尔克" scheme="https://ex2tron.github.io/tags/%E6%95%A6%E5%88%BB%E5%B0%94%E5%85%8B/"/>
    
      <category term="盗梦空间" scheme="https://ex2tron.github.io/tags/%E7%9B%97%E6%A2%A6%E7%A9%BA%E9%97%B4/"/>
    
      <category term="星际穿越" scheme="https://ex2tron.github.io/tags/%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/"/>
    
  </entry>
  
  <entry>
    <title>【利器篇】七牛云——用做每月免费10G的图床</title>
    <link href="https://ex2tron.github.io/2017/09/18/%E3%80%90%E5%88%A9%E5%99%A8%E7%AF%87%E3%80%91%E4%B8%83%E7%89%9B%E4%BA%91%E2%80%94%E2%80%94%E7%94%A8%E5%81%9A%E6%AF%8F%E6%9C%88%E5%85%8D%E8%B4%B910G%E7%9A%84%E5%9B%BE%E5%BA%8A/"/>
    <id>https://ex2tron.github.io/2017/09/18/【利器篇】七牛云——用做每月免费10G的图床/</id>
    <published>2017-09-18T11:55:38.000Z</published>
    <updated>2017-10-05T09:52:02.800Z</updated>
    
    <content type="html"><![CDATA[<p>随着越来越多的人开始使用Markdown写自己的独立博客，一个好用稳定的图床是必不可少的了。<a id="more"></a></p>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p>在<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛云</a>之前，我使用过国外的<a href="https://www.getcloudapp.com/" target="_blank" rel="external">Cloud App</a>和<a href="https://www.aliyun.com/product/oss?utm_content=se_877546" target="_blank" rel="external">阿里云的oss对象存储</a>。</p>
<ol>
<li><p>首先，国外的东西在国内稳定性和速度都是相对较差的，我试着在阿里云和Cloud App上上传同一张图片并生成外链，Cloud App要比阿里的加载速度延迟1-2s，阿里基本秒开。</p>
</li>
<li><p>阿里的oss对象存储虽然很稳定，但是并不提供免费的空间。相对来说，七牛云提供的每月10G免费流量，对于博客来说，绰绰有余了。</p>
</li>
<li><p>另外，七牛云提供了诸多的图片处理接口，如水印、格式转换、缩放等，很实用，很强大。</p>
</li>
</ol>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>注册并登陆<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛云</a>，在七牛云的产品列表中，添加一个<code>对象存储</code>，如这里取名为<code>picblog</code>：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/create_new_bucket.png" alt="create_new_bucket" title="">
                </div>
                <div class="image-caption">create_new_bucket</div>
            </figure>
<p>创建好之后，七牛云会自动生成一个测试域名：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/test_domain_name.png" alt="test_domain_name" title="">
                </div>
                <div class="image-caption">test_domain_name</div>
            </figure>
<p>这个域名就是你文件的前缀了。比如，我们点击<code>内容管理</code>，点击<code>上传文件</code>，选择一幅图片上传。上传完成后，复制该文件的外链地址：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/copy_file_link.png" alt="copy_file_link" title="">
                </div>
                <div class="image-caption">copy_file_link</div>
            </figure>
<p>这个地址就是你的图片地址辣，你可以在浏览器中访问该地址，比如你可以访问我的这个：<a href="http://pic.ex2tron.top/mycli_demo.gif" target="_blank" rel="external">mysql_demo</a></p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><h3 id="添加二级域名"><a href="#添加二级域名" class="headerlink" title="添加二级域名"></a>添加二级域名</h3><p>如同前面那张图上所说，七牛云默认的测试域名有很多限制。所以，你如果已经购买了域名的话，可以在这里绑定自己的二级域名，这样既好记又方便管理。</p>
<p>比如，这里我已经在万网上购买了<code>ex2tron.xin</code>的域名，这里我演示如何将七牛云的存储空间绑定<code>pic.ex2tron.xin</code>这个域名。</p>
<p>在七牛云的存储空间页面，点击<code>绑定域名</code>，只需要在加速域名处填写要绑定的域名，其他项保持默认即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">加速域名： pic.ex2tron.xin</div></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/bucket_binding_domain_name.png" alt="bucket_binding_domain_name" title="">
                </div>
                <div class="image-caption">bucket_binding_domain_name</div>
            </figure>
<p>创建后，系统会配置一段时间，等待处理完成，会显示一个诸如<code>xxx.qiniudns.com</code>的CNAME记录值，记下此值，后面要用到。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/cname_for_binding.png" alt="cname_for_binding" title="">
                </div>
                <div class="image-caption">cname_for_binding</div>
            </figure>
<h3 id="添加域名解析"><a href="#添加域名解析" class="headerlink" title="添加域名解析"></a>添加域名解析</h3><p>打开万网的域名控制台，添加一条CNAME的解析：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">记录类型：CNAME</div><div class="line">主机记录：pic</div><div class="line">记录值：xxx.qiniudns.com</div><div class="line"># 其他选型保持默认</div></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/add_dns_for_qiniu.png" alt="add_dns_for_qiniu" title="">
                </div>
                <div class="image-caption">add_dns_for_qiniu</div>
            </figure>
<p>这样，你上传的图片外链就是：<code>http://pic.ex2tron.xin/filename.png</code>之类的了。</p>
<h2 id="添加图片样式"><a href="#添加图片样式" class="headerlink" title="添加图片样式"></a>添加图片样式</h2><p>利用七牛云做图床的另外一个强大之处在于丰富的图片样式。点击<code>图片样式</code>-<code>新建图片样式</code>，七牛云提供了如下很多种场景：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/api_for_image_process.png" alt="api_for_image_process" title="">
                </div>
                <div class="image-caption">api_for_image_process</div>
            </figure>
<p>比如，这里我们选择<code>指定宽高，强行缩放+打图片水印</code>，然后添加一个文字水印，可以调整文字的字体样式，位置等等：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/add_water_mark_api.png" alt="add_water_mark_api" title="">
                </div>
                <div class="image-caption">add_water_mark_api</div>
            </figure>
<p>调整好之后，为样式取个名称，如<code>webpic</code>，这样，只要在原来外链的后面添加<code>-webpic</code>就可以了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://pic.ex2tron.xin/filename.png-webpic</div></pre></td></tr></table></figure>
<p>其中<code>-</code>这个连接符可以通过存储空间控制面板的<code>样式分隔符设置</code>中进行修改。</p>
<h2 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h2><p>对于七牛云，每张图片都在网页端上传还是比较麻烦的，所以用一些图床客户端工具会更加快速。</p>
<p>这里推荐使用<a href="http://mpic.lzhaofu.cn/" target="_blank" rel="external">MPic</a>图床神器。打开软件后，设置好自己的AK和SK（可在七牛云的个人中心-密钥管理中看到）。MPic支持文件拖拽上传，点击复制就可以复制外链，非常方便：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/mpic_qiniu.png" alt="mpic_qiniu" title="">
                </div>
                <div class="image-caption">mpic_qiniu</div>
            </figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着越来越多的人开始使用Markdown写自己的独立博客，一个好用稳定的图床是必不可少的了。
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="利器篇" scheme="https://ex2tron.github.io/tags/%E5%88%A9%E5%99%A8%E7%AF%87/"/>
    
      <category term="qiniu" scheme="https://ex2tron.github.io/tags/qiniu/"/>
    
      <category term="七牛云" scheme="https://ex2tron.github.io/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
      <category term="图床" scheme="https://ex2tron.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github Pages轻松搭博客(2)——在Github上部署</title>
    <link href="https://ex2tron.github.io/2017/09/13/Hexo-Github-Pages%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%8D%9A%E5%AE%A2-2-%E2%80%94%E2%80%94%E5%9C%A8Github%E4%B8%8A%E9%83%A8%E7%BD%B2/"/>
    <id>https://ex2tron.github.io/2017/09/13/Hexo-Github-Pages轻松搭博客-2-——在Github上部署/</id>
    <published>2017-09-13T12:15:47.000Z</published>
    <updated>2017-09-25T12:24:03.108Z</updated>
    
    <content type="html"><![CDATA[<p>使用免费的Github Pages服务或者部署在自己服务器上，别人就可以访问你的博客啦！<a id="more"></a></p>
<p>如果你已经有配置好的云服务器，直接可以将Hexo博客生成的public目录文件放在服务器上就好了。比如我购买的是阿里云服务器（apache），只需要将public下的文件放在<em>/var/www/html/</em>下面就可以用你服务器地址访问博客了。很容易，不过，考虑到云服务器的价格，这里我们还是用免费的Github吧。</p>
<hr>
<h2 id="关联Github"><a href="#关联Github" class="headerlink" title="关联Github"></a>关联Github</h2><p>首先登陆<a href="https://github.com/" target="_blank" rel="external">Github</a>，没有账号的话，先注册一个。新建一个名为username.github.io的仓库，<strong>username必须与你的账户名相同</strong>，比如我的就是ex2tron.github.io，这就是你博客的域名地址了（绑定独立域名之后再说）。<strong>新建时注意勾选”<em>Initialize this repository with a README</em>“</strong>，因为这个仓库必须不能为空。</p>
<blockquote>
<p>如果你是git新用户的话，推荐看：<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374385852170d9c7adf13c30429b9660d0eb689dd43a000" target="_blank" rel="external">廖雪峰的Git教程-远程仓库</a></p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/create_github_pages_repository.png" alt="create_github_pages_repository" title="">
                </div>
                <div class="image-caption">create_github_pages_repository</div>
            </figure>
<p>接下来打开博客目录下的_config.yml配置文件，定位到最后的deploy选项，修改如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:ex2tron/ex2tron.github.io.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure></p>
<p>注意冒号后面有个空格，不然会出错滴~~~配置好之后，使用下面的命令就可以部署到Github上了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo g</div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<p>这样通过Github提供的域名地址（如我的：<a href="https://ex2tron.github.io">https://ex2tron.github.io</a>）就可以访问你的博客了，简单快速高效！</p>
<h2 id="发布新博客"><a href="#发布新博客" class="headerlink" title="发布新博客"></a>发布新博客</h2><p>博客搭建起来之后，就可以用Markdown写博客辣，使用下面的命令，创建新博客（如名为：我的第一篇博客）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">'我的第一篇博客'</span></div></pre></td></tr></table></figure></p>
<p>此命令会在博客目录\source_posts\h下生成“我的第一篇博客.md”文件，这就是你的博客源文件啦，文件开头如下，记得冒号后面有空格噢，不然会出错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 我的第一篇博客</div><div class="line">date: 2017-09-13 20:15:47</div><div class="line">tags: #文章标签，格式：[1,2,3]</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>不熟悉Markdown语法的可以看：<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">Markdown 语法说明</a>。写完之后依然使用之前的三条命令发布：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo g</div><div class="line">$ hexo d</div></pre></td></tr></table></figure></p>
<p>后面两条指令也可以简化为一条：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g -d</div></pre></td></tr></table></figure></p>
<h2 id="常出现的问题"><a href="#常出现的问题" class="headerlink" title="常出现的问题"></a>常出现的问题</h2><ol>
<li><p>在hexo d进行部署时，如果出现ERROR Deployer not found: git的问题，可以先用下面的命令修复：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
</li>
<li><p>如果你没配置过ssh导致部署失败（可以通过ssh -T username@example.com来测试ssh有无配置成功），可以参考这篇文章：<a href="http://www.cnblogs.com/xsilence/p/6001938.html" target="_blank" rel="external">针对github权限导致hexo部署失败的解决方案</a></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用免费的Github Pages服务或者部署在自己服务器上，别人就可以访问你的博客啦！
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="Hexo" scheme="https://ex2tron.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://ex2tron.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github Pages轻松搭博客(1)</title>
    <link href="https://ex2tron.github.io/2017/09/13/Hexo-Github-Pages%E8%BD%BB%E6%9D%BE%E6%90%AD%E5%8D%9A%E5%AE%A2-1/"/>
    <id>https://ex2tron.github.io/2017/09/13/Hexo-Github-Pages轻松搭博客-1/</id>
    <published>2017-09-13T08:07:06.000Z</published>
    <updated>2017-09-25T12:23:48.596Z</updated>
    
    <content type="html"><![CDATA[<p>想用Github Pages轻松搭建自己的博客，用Hexo，10分钟！<a id="more"></a></p>
<blockquote>
<p>废话区域：我在接触Hexo（可以读作Hack So）之前，绝对没少尝试建立一个完全自由、自己说了算的独立博客：WordPress定位重量级，功能强大，生成的是动态网站，依赖数据库……太繁琐了，放弃~而Jekyll和Hexo都是静态建站工具，但Jekyll的依赖项也很多，也不简约，不想用~最后才是名气相对不高的Hexo，相信我，熟练的情况下，10分钟就可以搭出来：</p>
</blockquote>
<hr>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>是一个免费的静态Blog生成工具。简单来说，就是把你写的Markdown博客文件生成静态网页，把这个网页放在Github或者你自己的服务器上就可以快速访问了。软件界，从来不缺自动化工具(ง •_•)ง</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官网文档：<a href="https://hexo.io/docs/" target="_blank" rel="external">Hexo Docs</a></p>
<p>Hexo安装前，你的电脑上需要先有下面这两个东西：</p>
<ul>
<li><a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a></li>
<li><a href="https://git-scm.com/" target="_blank" rel="external">Git</a></li>
</ul>
<p>如果已经安装了的话，命令行下一句话就好啦：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h2 id="初始化博客目录"><a href="#初始化博客目录" class="headerlink" title="初始化博客目录"></a>初始化博客目录</h2><p>在你的本地新建一个存放博客的目录，比如”<em>D:\MyHexoBlog</em>“，然后在这个目录右键，选择”<em>Git Bash Here</em>“，输入下面两条命令进行初始化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>初始化完成之后，你的目录结构应该是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── source</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes</div></pre></td></tr></table></figure></p>
<p>如果没有出错的话，继续执行下面的指令启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g </div><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>启动之后，在浏览器中访问：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>，是不是看到了漂亮的Hexo博客页面了。不过目前这个博客还是运行在你本机上的，下篇我们看一下怎么样让别人也能访问这个博客。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/default_hexo_theme.png" alt="default_hexo_index" title="">
                </div>
                <div class="image-caption">default_hexo_index</div>
            </figure>
<p>参考资料：</p>
<ul>
<li><a href="https://hexo.io/docs/" target="_blank" rel="external">Hexo Docs</a></li>
<li><a href="http://blog.csdn.net/cl534854121/article/details/76121066" target="_blank" rel="external">Hexo+Github搭建个人博客(一)——开始搭建 </a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想用Github Pages轻松搭建自己的博客，用Hexo，10分钟！
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="Hexo" scheme="https://ex2tron.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://ex2tron.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>【利器篇】用VS Code写Markdown</title>
    <link href="https://ex2tron.github.io/2017/09/11/%E3%80%90%E5%88%A9%E5%99%A8%E7%AF%87%E3%80%91%E7%94%A8VSCode%E5%86%99Markdown/"/>
    <id>https://ex2tron.github.io/2017/09/11/【利器篇】用VSCode写Markdown/</id>
    <published>2017-09-11T07:11:22.000Z</published>
    <updated>2017-10-05T09:52:19.495Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown以其简洁、优雅整齐的风格，成为目前非常流行的博客文件格式。甚至有人说：每个人都应该用Markdown写博客<a id="more"></a>。关于Markdown相较富文本的优势，我就不细说了。</p>
<h2 id="Markdown编辑器"><a href="#Markdown编辑器" class="headerlink" title="Markdown编辑器"></a>Markdown编辑器</h2><p>支持Markdown的工具有很多，大家可以参考网上，如这篇文章：<a href="https://sspai.com/post/32483" target="_blank" rel="external">码字必备：18 款优秀的 Markdown 写作工具 | 2015 年度盘点</a>。就我自己目前在Windows上使用的而言有：<a href="http://www.jianshu.com/" target="_blank" rel="external">简书</a>、<a href="http://note.youdao.com/" target="_blank" rel="external">有道云笔记</a>、<a href="https://www.typora.io/#windows" target="_blank" rel="external">Typora</a>、<a href="https://code.visualstudio.com" target="_blank" rel="external">VSCode</a></p>
<p>简书本身就是一个博客平台，有道云笔记是类似OneNote和印象笔迹的应用。如果你已经在使用这两个平台的话，就不用多说了。但如果只是想用一个单纯的Markdown编辑器的话，推荐极致简洁的Typora。虽说界面简洁，但功能强大，不仅内置了常见的一些Markdown样式，还支持PDF/HTML等多种格式导出：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/markdown_in_typora.png" alt="markdown_in_typora" title="">
                </div>
                <div class="image-caption">markdown_in_typora</div>
            </figure>
<p>你是一枚文青的话，千万不要错过这款编辑器。不过，对于程序猿来说，VSCode才显得更有味道。</p>
<h2 id="用VSCode写Markdown"><a href="#用VSCode写Markdown" class="headerlink" title="用VSCode写Markdown"></a>用VSCode写Markdown</h2><p>VSCode就不过多介绍了，我之前也写过关于它的介绍：</p>
<ul>
<li><p><a href="http://ex2tron.lofter.com/post/1d7338a1_86f8f92" target="_blank" rel="external">Visual Studio Code Preview初体验</a></p>
</li>
<li><p><a href="http://ex2tron.lofter.com/post/1d7338a1_870beb7" target="_blank" rel="external">Visual Studio Code Preview深度体验、使用技巧</a></p>
</li>
</ul>
<p>现在版本的VSCode默认已经支持Markdown预览，不需要下载插件。用VSCode打开md文件或将当前文件更改为Markdown格式就可以开始书写了：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/markdown_in_vscode.png" alt="markdown_in_vscode" title="">
                </div>
                <div class="image-caption">markdown_in_vscode</div>
            </figure>
<p>VSCode支持两种预览方式：</p>
<ul>
<li>按下Ctrl+K V，像上图一样左右同步实时预览</li>
<li>按下Ctrl+Shift+V，只预览最终渲染结果</li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/editor_preview_Synchronization.gif" alt="editor_preview_Synchronization" title="">
                </div>
                <div class="image-caption">editor_preview_Synchronization</div>
            </figure>
<p>如上图，编写和预览界面是实时同步的，不需要的话，可以按下Ctrl+,组合键，添加如下两条设置：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">"markdown.preview.scrollEditorWithPreview": false,</div><div class="line">"markdown.preview.scrollPreviewWithEditorSelection": false</div></pre></td></tr></table></figure>
<p>另外，目前VSCode预览样式中，中文的显示很别扭，这里推荐下载<a href="https://github.com/ex2tron/MyLibsAndSamples/blob/master/Configs/VSCode/markdown-github.css" target="_blank" rel="external">Github风格的CSS</a></p>
<p>下载完成后，配置css文件的设置如下即可：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">"markdown.styles": [</div><div class="line">    <span class="string">"file:///D:/markdown-github.css"</span></div><div class="line">]</div></pre></td></tr></table></figure>
<p>另外，VSCode中有很多Markdown相关的插件，如”Markdown All in One”和”Markdown Theme Kit”等，大家可以下载下来尝试一下哈！</p>
<blockquote>
<p>参考资料：<a href="https://code.visualstudio.com/docs/languages/markdown" target="_blank" rel="external">Markdown editing with Visual Studio Code</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown以其简洁、优雅整齐的风格，成为目前非常流行的博客文件格式。甚至有人说：每个人都应该用Markdown写博客
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="利器篇" scheme="https://ex2tron.github.io/tags/%E5%88%A9%E5%99%A8%E7%AF%87/"/>
    
      <category term="Markdown" scheme="https://ex2tron.github.io/tags/Markdown/"/>
    
      <category term="VSCode" scheme="https://ex2tron.github.io/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>【利器篇】MyCLI——自动补全和语法高亮的MySQL命令行工具</title>
    <link href="https://ex2tron.github.io/2017/09/11/%E3%80%90%E5%88%A9%E5%99%A8%E7%AF%87%E3%80%91MyCLI%E2%80%94%E2%80%94%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%E5%92%8C%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E7%9A%84MySQL%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/"/>
    <id>https://ex2tron.github.io/2017/09/11/【利器篇】MyCLI——自动补全和语法高亮的MySQL命令行工具/</id>
    <published>2017-09-11T06:32:14.000Z</published>
    <updated>2017-10-05T09:52:10.798Z</updated>
    
    <content type="html"><![CDATA[<p>mycli是MySQL命令行工具，支持关键字语法高亮和自动补全，看下面的动图你就知道了：<a id="more"></a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/mycli_demo.gif" alt="mycli_demo" title="">
                </div>
                <div class="image-caption">mycli_demo</div>
            </figure>
<p>mycli不仅会提示MySQL的关键字，更牛掰的是数据库名、表名、字段名都可以提示，非常方便。如果你经常在命令行里码MySQL命令，相信这款工具一定会让你满意。</p>
<p>官网：<a href="http://www.mycli.net/" target="_blank" rel="external">MyCLI</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>其实mycli是一个Python的包，所以你已经安装了Python(pip)的话，用下面一条指令就好了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; pip install mycli</div></pre></td></tr></table></figure>
<p>如果出现问题，可以参考<a href="http://www.mycli.net/" target="_blank" rel="external">官网</a>，有详细的说明。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/install_mycli.png" alt="install_mycli" title="">
                </div>
                <div class="image-caption">install_mycli</div>
            </figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装好之后，在cmd下，将以往登陆MySQL用的mysql换成mycli就可以了：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://pic.ex2tron.top/login_with_mycli.png" alt="login_with_mycli" title="">
                </div>
                <div class="image-caption">login_with_mycli</div>
            </figure>
<p>好了，大家觉得好用的话，欢迎扩散噢！</p>
<blockquote>
<p><em>Never give up. Never stop fighting. Excelsior!</em></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mycli是MySQL命令行工具，支持关键字语法高亮和自动补全，看下面的动图你就知道了：
    
    </summary>
    
    
      <category term="Code" scheme="https://ex2tron.github.io/tags/Code/"/>
    
      <category term="利器篇" scheme="https://ex2tron.github.io/tags/%E5%88%A9%E5%99%A8%E7%AF%87/"/>
    
      <category term="MyCLI" scheme="https://ex2tron.github.io/tags/MyCLI/"/>
    
      <category term="MySQL" scheme="https://ex2tron.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>博客新篇章！Brave New World</title>
    <link href="https://ex2tron.github.io/2017/09/11/%E5%8D%9A%E5%AE%A2%E6%96%B0%E7%AF%87%E7%AB%A0%EF%BC%81/"/>
    <id>https://ex2tron.github.io/2017/09/11/博客新篇章！/</id>
    <published>2017-09-11T03:34:20.326Z</published>
    <updated>2017-08-28T09:50:40.458Z</updated>
    
    <content type="html"><![CDATA[<p>从2014/08/23开始在lofter上写我的<a href="http://ex2tron.lofter.com/post/1d7338a1_86b724e" target="_blank" rel="external">第一篇博客</a>开始，已经过去了整整三年……<a id="more"></a></p>
<h2 id="再见，lofter"><a href="#再见，lofter" class="headerlink" title="再见，lofter"></a>再见，lofter</h2><p>lofter是一个非常不错的轻博客平台，我喜欢它的设计和定位。但lofter终究不适合程序猿，长久以来不支持markdown也让我很头痛。现在，终于还是要说再见了!</p>
<blockquote>
<p><a href="http://ex2tron.lofter.com" target="_blank" rel="external">http://ex2tron.lofter.com</a></p>
</blockquote>
<h2 id="旧的66篇博客"><a href="#旧的66篇博客" class="headerlink" title="旧的66篇博客"></a>旧的66篇博客</h2><h3 id="【Code-编程-开发】"><a href="#【Code-编程-开发】" class="headerlink" title="【Code/编程/开发】"></a>【Code/编程/开发】</h3><p><a href="http://www.lofter.com/lpost/1d7338a1_f50d92d" target="_blank" rel="external">构建法、单点控制</a></p>
<p><a href="http://www.lofter.com/lpost/1d7338a1_10204bea" target="_blank" rel="external">构建法、表驱动法</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_f0c9638" target="_blank" rel="external">【云端漫步】一起上“阿里云”（1）、购买学生党套餐</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_fea154c" target="_blank" rel="external">【云端漫步】一起上“阿里云”（2）、远程登陆服务器</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_ffa2f60" target="_blank" rel="external">【云端漫步】一起上“阿里云”（3）、LAMP环境搭建</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_ffad954" target="_blank" rel="external">【云端漫步】一起上“阿里云”（4）、搭建Git服务器</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_10171f1e" target="_blank" rel="external">【云端漫步】一起上“阿里云”（5）、域名购买和解析</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_f59f87a" target="_blank" rel="external">Python多字节二进制文件读取</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_eaa8b0d" target="_blank" rel="external">C#中集合List的深浅拷贝</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_eb8cdad" target="_blank" rel="external">C#中常用的集合List去重方法</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_f59ed25" target="_blank" rel="external">C#多字节二进制文件读取</a></p>
<p><a href="http://www.lofter.com/lpost/1d7338a1_da4b787" target="_blank" rel="external">深入理解C#（01）：堆栈、值类型和引用类型、值传递和引用传递</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_870bee8" target="_blank" rel="external">宽字符</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86c86dd" target="_blank" rel="external">编程命名法</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_8b70ad4" target="_blank" rel="external">编程字体推荐</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_a9009ce" target="_blank" rel="external">Json序列化与反序列化（1）-JavaScriptSerializer</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_cb8b36b" target="_blank" rel="external">Json序列化与反序列化（2）-Json.Net</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_cc1a00c" target="_blank" rel="external">Json序列化与反序列化（3）-DataContractJsonSerializer</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86b7467" target="_blank" rel="external">CR与LF（操作系统“下一行”的不同）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86f8f92" target="_blank" rel="external">Visual Studio Code Preview初体验</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_870beb7" target="_blank" rel="external">Visual Studio Code Preview深度体验、使用技巧</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_ca1a61f" target="_blank" rel="external">Brand7-品牌漆上架商店啦！</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_c388b82" target="_blank" rel="external">UWP应用Brand7开发小记（1）、判断App是否是第一次启动</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_c665a5c" target="_blank" rel="external">UWP应用Brand7开发小记（2）、用Excel和Json初始化本地数据源Part1</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_c66b082" target="_blank" rel="external">UWP应用Brand7开发小记（2）、用Excel和Json初始化本地数据源Part2</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_c7ae2f8" target="_blank" rel="external">UWP 应用Brand7开发小记（3）、判断GridView的滚动方向</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_c7f56c1" target="_blank" rel="external">UWP应用Brand7开发小记（4）、集合控件的虚拟化问题</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_cccfc2d" target="_blank" rel="external">UWP 应用Brand7开发小记（5）、控件嵌入标题栏</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_cc38035" target="_blank" rel="external">MySQL学习小记（1）-不能启动MySQL服务</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_cca3bd7" target="_blank" rel="external">MySQL学习小记（2）-添加远程访问权限详解</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_d3d0794" target="_blank" rel="external">MySQL学习小记（3）-外键的使用</a></p>
<p><a href="http://www.lofter.com/lpost/1d7338a1_d5494fc" target="_blank" rel="external">MySQL学习小记（4）-最大连接数</a></p>
<p><a href="http://www.lofter.com/lpost/1d7338a1_10c4cf02" target="_blank" rel="external">MySQL学习小记（5）-主从服务器同步</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86dd19e" target="_blank" rel="external">VS至强插件ReSharper指南01、安装入门</a></p>
<h3 id="【视觉与图像】"><a href="#【视觉与图像】" class="headerlink" title="【视觉与图像】"></a>【视觉与图像】</h3><p><a href="http://ex2tron.lofter.com/post/1d7338a1_fa820b3" target="_blank" rel="external">【视觉与图像】摄像头篇（1）、CCD靶面尺寸</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_fad34dc" target="_blank" rel="external">【视觉与图像】摄像头篇（2）、焦距和视角</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_10bc7d39" target="_blank" rel="external">CMake编译OpenCV3.2（Qt平台）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_10bc7e4e" target="_blank" rel="external">Qt+OpenCV环境搭建</a></p>
<h3 id="【Design-演示-设计】"><a href="#【Design-演示-设计】" class="headerlink" title="【Design/演示/设计】"></a>【Design/演示/设计】</h3><p><a href="http://ex2tron.lofter.com/post/1d7338a1_86c7385" target="_blank" rel="external">玩转PPT放映第一篇、演示者视图</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86dc94e" target="_blank" rel="external">玩转PPT放映第二篇、快捷键</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_870bc93" target="_blank" rel="external">玩转PPT放映第三篇、自定义放映</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86d9038" target="_blank" rel="external">【PPT动画】钟摆效果</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_87060ac" target="_blank" rel="external">【PPT动画】模糊渐变切换效果</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86c72ce" target="_blank" rel="external">【PPT动画】制作左、右浮入效果</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_8700201" target="_blank" rel="external">PPT制作画中画效果</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_870bdfa" target="_blank" rel="external">PPT绘制长阴影图标</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86c9304" target="_blank" rel="external">PPT三维立体图形绘制</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86dd125" target="_blank" rel="external">PPT巧用矩形等分区域（黄金分割线）</a></p>
<h3 id="【Lens-摄影-影视】"><a href="#【Lens-摄影-影视】" class="headerlink" title="【Lens/摄影/影视】"></a>【Lens/摄影/影视】</h3><p><a href="http://ex2tron.lofter.com/post/1d7338a1_eaa874a" target="_blank" rel="external">家乡 | 黑白 | PENTAX K-50 | 看见不一样</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86dc98c" target="_blank" rel="external">看见，时光（延时摄影短片）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_a483017" target="_blank" rel="external">我那时的“计量”（一），黑白质感</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_a526318" target="_blank" rel="external">我那时的“计量”（二），迎新色彩</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_a1952f4" target="_blank" rel="external">Lumia 1520 by iPhone6s</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_a93fda1" target="_blank" rel="external">历届奥斯卡最佳动画长片下载（1）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_a9207ea" target="_blank" rel="external">历届奥斯卡最佳动画长片下载（2）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_8bc8efc" target="_blank" rel="external">「精品」皮克斯15部动画长片下载</a></p>
<h3 id="【Other-科普-发现】"><a href="#【Other-科普-发现】" class="headerlink" title="【Other/科普/发现】"></a>【Other/科普/发现】</h3><p><a href="http://ex2tron.lofter.com/post/1d7338a1_86b724e" target="_blank" rel="external">PPI与DPI</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_87060f2" target="_blank" rel="external">USB接口类型（2.0概述）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_f078121" target="_blank" rel="external">Type-C和USB3.0（3.1）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_dda20a4" target="_blank" rel="external">发现Win10 Bug两枚（均得微软官方确认，一枚已解决）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_9f2bdda" target="_blank" rel="external">再战之后，这场旅途，只属于我</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_a1b9c49" target="_blank" rel="external">Win8以上系统安装PL2303驱动</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86f6444" target="_blank" rel="external">硬盘容量计算的差别</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_8700192" target="_blank" rel="external">硬盘整数分区原理及计算（附工具下载）</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_870619b" target="_blank" rel="external">详解Windows运行组件第一篇、原理篇</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_870bd17" target="_blank" rel="external">详解Windows运行组件第二篇、自定义运行指令</a></p>
<p><a href="http://ex2tron.lofter.com/post/1d7338a1_86dd0c5" target="_blank" rel="external">Windows 10技术预览版体验视频</a></p>
<blockquote>
<p><em>Never give up. Never stop fighting. Excelsior!</em></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从2014/08/23开始在lofter上写我的&lt;a href=&quot;http://ex2tron.lofter.com/post/1d7338a1_86b724e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;第一篇博客&lt;/a&gt;开始，已经过去了整整三年……
    
    </summary>
    
    
  </entry>
  
</feed>
